name: branch deploy

# The workflow to execute on is comments that are newly created
on:
  issue_comment:
    types: [created]

# Permissions needed for reacting and adding comments for IssueOps commands
permissions:
  pull-requests: write
  deployments: write
  contents: write
  checks: read
  pages: write
  id-token: write

jobs:
  trigger:
    if: ${{ github.event.issue.pull_request }} # only run on pull request comments
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.branch-deploy.outputs.continue }}
      noop: ${{ steps.branch-deploy.outputs.noop }}
      deployment_id: ${{ steps.branch-deploy.outputs.deployment_id }}
      environment: ${{ steps.branch-deploy.outputs.environment }}
      ref: ${{ steps.branch-deploy.outputs.ref }}

    steps:
      - uses: github/branch-deploy@v4.4.0
        id: branch-deploy
        with:
          trigger: ".deploy"
          skip_completing: "true"

  build:
    needs: trigger
    if: ${{ needs.trigger.outputs.continue == 'true' }}
    runs-on: ubuntu-latest

    steps:
      # Checkout your projects repository based on the ref provided by the branch-deploy step
      - uses: actions/checkout@3.0.2
        with:
          ref: ${{ needs.trigger.outputs.ref }}

      - name: set hugo version
        id: hugo-version
        run: |
          HUGO_VERSION=$(cat .hugo-version)
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV

      - name: install hugo cli
        env:
          HUGO_VERSION: ${{ steps.hugo-version.outputs.HUGO_VERSION }}
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: setup pages
        id: pages
        uses: actions/configure-pages@c5a3e1159e0cbdf0845eb8811bd39e39fc3099c2 # pin@v2.1.3

      - name: build with hugo
        run: |
          hugo --gc --verbose \
            --baseURL ${{ steps.pages.outputs.base_url }}

      - name: write build version
        run: echo ${GITHUB_SHA} > ./public/version.txt

      - name: upload artifact
        uses: actions/upload-pages-artifact@253fd476ed429e83b7aae64a92a75b4ceb1a17cf # pin@v1.0.7
        with:
          path: ./public

  deploy:
    needs: [trigger, build]
    if: ${{ needs.trigger.outputs.continue == 'true' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@20a4baa1095bad40ba7d6ca0d9abbc220b76603f # pin@v1.2.3

  result:
    needs: [trigger, build, deploy]
    if: ${{ needs.deploy.result != 'skipped' }}
    runs-on: ubuntu-latest

    steps:
      - name: Create a deployment status
        run: |
          gh api \
            --method POST \
            repos/{owner}/{repo}/deployments/${{ needs.build.outputs.deployment_id }}/statuses \
            -f environment='${{ needs.build.outputs.environment }}' \
            -f state='${{ (needs.deploy.result == 'success' && 'success') || 'failure' }}'
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
